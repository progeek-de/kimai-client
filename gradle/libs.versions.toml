[versions]


project = "1.0.0"
kotlin = "1.9.20"
agp = "8.1.4"
jvmTarget = "17"

android-minSdk = "24"
android-compileSdk = "34"
android-targetSdk = "34"

ktor = "2.3.6"
compose-jetbrains = "1.5.10"
coroutines = "1.7.3"

androidx-activityCompose = "1.8.1"

decompose = "2.1.4"
essenty = "1.2.0"
mvikotlin = "3.3.0"
reaktive = "1.3.0"

koin = "3.5.2-RC1"
koin-compose = "1.1.1-RC1"

buildkonfigGradlePlugin = "0.15.0"

multiplatform-settings = "1.1.0"
moko-resources = "0.23.0"
cryptography = "0.3.0"
sqldelight = "2.0.0"

arrow = "1.2.1"
systemTray = "4.4"
dorkboxOs = "1.11"
napier = "2.7.1"

[plugins]

kotlin-multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
android-application = { id = "com.android.application", version.ref = "agp" }
android-library = { id = "com.android.library", version.ref = "agp" }
jetbrains-compose = { id = "org.jetbrains.compose", version.ref = "compose-jetbrains" }
multiplatform-resources = { id = "dev.icerock.mobile.multiplatform-resources", version.ref = "moko-resources" }
sqldelight = { id = "app.cash.sqldelight", version.ref = "sqldelight"}
jlleitschuh-gradle-ktlint = { id = "org.jlleitschuh.gradle.ktlint", version = "11.6.1"}

[libraries]

androidx-activity-activityCompose = { group = "androidx.activity", name = "activity-compose", version.ref = "androidx-activityCompose" }
jetbrains-compose-preview = { group = "org.jetbrains.compose.ui", name = "ui-tooling-preview", version.ref = "compose-jetbrains" }

buildkonfig-gradle-plugin = { group = "com.codingfeline.buildkonfig", name = "buildkonfig-gradle-plugin", version.ref = "buildkonfigGradlePlugin" }
decompose-decompose = { group = "com.arkivanov.decompose", name = "decompose", version.ref = "decompose" }
decompose-extensionsComposeJetbrains = { group = "com.arkivanov.decompose", name = "extensions-compose-jetbrains", version.ref = "decompose" }
essenty-lifecycle = { group = "com.arkivanov.essenty", name = "lifecycle", version.ref = "essenty" }

# mvikotlin
mvikotlin-core = { group = "com.arkivanov.mvikotlin", name = "mvikotlin", version.ref = "mvikotlin"}
mvikotlin-main = { group = "com.arkivanov.mvikotlin", name = "mvikotlin-main", version.ref = "mvikotlin"}
mvikotlin-logging = { group = "com.arkivanov.mvikotlin", name = "mvikotlin-logging", version.ref = "mvikotlin"}
mvikotlin-timetravel = { group = "com.arkivanov.mvikotlin", name = "mvikotlin-timetravel", version.ref = "mvikotlin"}
mvikotlin-coroutines = { group = "com.arkivanov.mvikotlin", name = "mvikotlin-extensions-coroutines", version.ref = "mvikotlin"}

# ktor
ktor-client-core = { group = "io.ktor", name = "ktor-client-core", version.ref = "ktor" }
ktor-client-cio = { group = "io.ktor", name = "ktor-client-cio", version.ref = "ktor" }
ktor-client-logging = { group = "io.ktor", name = "ktor-client-logging", version.ref = "ktor" }
ktor-client-content-negotiation = { group = "io.ktor", name = "ktor-client-content-negotiation", version.ref = "ktor" }
ktor-serialization-kotlinx-json = { group = "io.ktor", name = "ktor-serialization-kotlinx-json", version.ref = "ktor" }

kotlin-serialization = { group =  "org.jetbrains.kotlin", name = "kotlin-serialization", version.ref = "kotlin" }
kotlinx-serialization-json = { group = "org.jetbrains.kotlinx", name = "kotlinx-serialization-json", version = "1.6.0-RC" }
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutines" }
kotlinx-coroutines-swing = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-swing", version.ref = "coroutines" }
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version = "0.4.1" }

# koin
koin-core = { group = "io.insert-koin", name = "koin-core", version.ref = "koin" }
koin-core-coroutines = { group = "io.insert-koin", name = "koin-core-coroutines", version.ref = "koin" }
koin-android = { group = "io.insert-koin", name = "koin-android", version.ref = "koin" }
koin-compose = { group = "io.insert-koin", name = "koin-compose", version.ref = "koin-compose" }

dotenv = { module = "io.github.cdimascio:dotenv-kotlin", version = "6.4.1" }

# storage
settings-core = { group = "com.russhwolf", name = "multiplatform-settings", version.ref = "multiplatform-settings" }
settings-coroutines = { group = "com.russhwolf", name = "multiplatform-settings-coroutines", version.ref = "multiplatform-settings" }
settings-noarg = { group = "com.russhwolf", name = "multiplatform-settings-no-arg", version.ref = "multiplatform-settings" }

# moko
moko-resources-generator = { group = "dev.icerock.moko", name ="resources-generator", version.ref ="moko-resources" }
moko-resources-core = { group = "dev.icerock.moko", name = "resources", version.ref = "moko-resources" }
moko-resources-compose = { group = "dev.icerock.moko", name = "resources-compose", version.ref = "moko-resources" }
moko-resources-test = { group = "dev.icerock.moko", name = "resources-test", version.ref = "moko-resources" }

# crypto
cryptography-core = { group = "dev.whyoleg.cryptography", name = "cryptography-core", version.ref ="cryptography"}
cryptography-jdk = { group = "dev.whyoleg.cryptography", name = "cryptography-provider-jdk", version.ref ="cryptography"}

# sqldelight
sqldelight-android-driver = { group = "app.cash.sqldelight", name = "android-driver", version.ref = "sqldelight" }
sqldelight-sqlite-driver = { group = "app.cash.sqldelight", name = "sqlite-driver", version.ref = "sqldelight" }
sqldelight-native-driver = { group = "app.cash.sqldelight", name = "native-driver", version.ref = "sqldelight" }
sqldelight-coroutines-extensions = { group = "app.cash.sqldelight", name = "coroutines-extensions", version.ref = "sqldelight" }
sqldelight-primitive-adapters = { group = "app.cash.sqldelight", name = "primitive-adapters", version.ref = "sqldelight" }

# store5
store-core = { group = "org.mobilenativefoundation.store", name = "store5", version = "5.0.0" }
jetbrains-kotlinx-atomicfu = {group = "org.jetbrains.kotlinx", name = "atomicfu", version = "0.21.0"}

# arrow
arrow-core = { module = "io.arrow-kt:arrow-core", version.ref = "arrow" }

dorkbox-systemTray = { module = "com.dorkbox:SystemTray", version.ref = "systemTray" }
dorkbox-os = { module = "com.dorkbox:OS", version.ref = "dorkboxOs" }
twitter-compose-rules = { module = "com.twitter.compose.rules:ktlint", version = "0.0.26" }

# napier
napier = { module = "io.github.aakira:napier", version.ref = "napier" }

[bundles]
ktor-client = ["ktor-client-core", "ktor-client-cio", "ktor-client-content-negotiation", "ktor-serialization-kotlinx-json", "ktor-client-logging"]
koin = ["koin-core","koin-core-coroutines","koin-compose"]
koin-android = ["koin-core","koin-core-coroutines","koin-android"]